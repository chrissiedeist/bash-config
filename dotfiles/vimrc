" set t_Co=256
colorscheme desert
set nocompatible

syntax on

if has("autocmd")
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif
endif

if has("autocmd")
  filetype indent on
  filetype plugin on
endif

set showcmd		  " Show (partial) command in status line.
set showmatch		" Show matching brackets.
set ignorecase
set smartcase		" Do smart case matching
set incsearch		" Incremental search
set hlsearch 
set autowrite		" Automatically save before commands like :next and :make
set hidden      " Hide buffers when they are abandoned
set mouse=a	  	" Enable mouse usage (all modes) in terminals
set title
set fileformat=unix
set number
set background=dark
" set guifont=DejaVu\ Sans\ Mono\ 8
" set guifont=Inconsolata:h14
set guifont=Menlo:h12
set ts=2
set shiftwidth=2
set expandtab
set guioptions-=T
set visualbell
set nowrap
set ruler
set cursorline
" set cursorcolumn

" ack is far superior to grep!  no seriously
set grepprg=ack
set grepformat=%f:%l:%m

" make backspace work normal (indent, eol, start)
set backspace=2

" allow backspace and cursor keys to cross line boundaries
set whichwrap+=<,>,h,l

autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1

let Tlist_Process_File_Always=1
let Tlist_Show_Menu=1

""""""""""""""""""""""""""
" Keyboard Customizations"
""""""""""""""""""""""""""
map <c-pagedown> :bn<enter>
map <c-pageup> :bp<enter>

" navigate window splits
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-h> <c-w>h
map <c-l> <c-w>l

" leader commands
let mapleader = "," 

" file browsing
map <leader>d :execute 'NERDTreeToggle ' . getcwd()<CR>
let NERDTreeIgnore=['\.vim$', '\.pyc$', '\~$']

" Ruby tests
map <leader>R :RunAllRubyTests<CR>
map <leader>r :RunRubyFocusedContext<CR>
map <leader>x :!ruby %<CR>

" Ack for the current word
map <leader>aw :Ack <c-r>=expand("<cword>")<CR><CR> 

" Quickly get rid of highlighting
map <leader>nh :noh<CR>

" Taglist
map <leader>tl :TlistToggle<CR>

" Quick full screen toggle
map <leader>fs :set invfullscreen<CR>

" showmarks configuration
let g:showmarks_enable=1 
let g:showmarks_include="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"

let g:rails_ctags_arguments='--exclude="*.*.js" --exclude="facebox.js"'

autocmd FileType make     set noexpandtab

au BufNewFile,BufRead *.todo setf todo

set laststatus=2
set statusline= 
set statusline+=%<\                       " cut at start 
set statusline+=%2*[%n%H%M%R%W]%*\        " buffer number, and flags 
set statusline+=%-40f\                    " relative path 
set statusline+=%=                        " seperate between right- and left-aligned 
set statusline+=%{fugitive#statusline()}\ 
set statusline+=%1*%y%*%*\                " file type 
set statusline+=%10((%l/%L)%)\            " line and column 
set statusline+=%P                        " percentage of file 

"" Rsense configuration
let g:rsenseHome = "$RSENSE_HOME"
let g:rsenseUseOmniFunc = 1

if has("gui_running")
  set lines=160 columns=280 " Maximize gvim window.
  set guioptions-=T         " get rid of the toolbar
  set guicursor=a:blinkon0  " no blinking cursor
endif 

set foldmethod=manual
